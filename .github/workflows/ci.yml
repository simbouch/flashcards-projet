name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test-backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r db_module/requirements.txt
        pip install -r ocr_service/requirements.txt
        pip install -r llm_service/requirements.txt
        pip install -r backend_service/requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test db_module
      run: |
        pytest db_module/tests/

    - name: Test ocr_service
      run: |
        pytest ocr_service/tests/

    - name: Test llm_service
      run: |
        pytest llm_service/tests/

    - name: Test backend_service
      run: |
        pytest backend_service/tests/

  lint-and-test-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      working-directory: ./frontend_service
      run: npm install

    - name: Lint
      working-directory: ./frontend_service
      run: npm run lint

    - name: Test
      working-directory: ./frontend_service
      run: npm run test:unit

  build-docker-images:
    runs-on: ubuntu-latest
    needs: [lint-and-test-backend, lint-and-test-frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build OCR Service
      uses: docker/build-push-action@v4
      with:
        context: ./ocr_service
        push: false
        tags: ghcr.io/${{ github.repository_owner }}/ocr-service:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build LLM Service
      uses: docker/build-push-action@v4
      with:
        context: ./llm_service
        push: false
        tags: ghcr.io/${{ github.repository_owner }}/llm-service:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build DB Module
      uses: docker/build-push-action@v4
      with:
        context: ./db_module
        push: false
        tags: ghcr.io/${{ github.repository_owner }}/db-module:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build Backend Service
      uses: docker/build-push-action@v4
      with:
        context: ./backend_service
        push: false
        tags: ghcr.io/${{ github.repository_owner }}/backend-service:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build Frontend Service
      uses: docker/build-push-action@v4
      with:
        context: ./frontend_service
        push: false
        tags: ghcr.io/${{ github.repository_owner }}/frontend-service:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
